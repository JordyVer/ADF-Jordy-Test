{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "CosmosDb1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "CosmosDb1",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				},
				{
					"linkedService": {
						"referenceName": "CosmosDb2",
						"type": "LinkedServiceReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "sort1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Created as string,",
				"          Name as string,",
				"          UserId as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     format: 'document',",
				"     container: 'Users',",
				"     store: 'cosmosDB') ~> source1",
				"source(output(",
				"          Created as string,",
				"          Name as string,",
				"          UserId as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'document',",
				"     container: 'Users',",
				"     store: 'cosmosDB') ~> source2",
				"source1 sort(asc(UserId, true)) ~> sort1",
				"source2 alterRow(insertIf(isUpsert()),",
				"     updateIf(isUpsert())) ~> AlterRow1",
				"AlterRow1 derive(id = @(toString(uuid()))) ~> derivedColumn1",
				"sort1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> sink1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'document',",
				"     container: 'Users',",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: true,",
				"     upsertable: false,",
				"     store: 'cosmosDB',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}